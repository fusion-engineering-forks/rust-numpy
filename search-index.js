var N=null,E="",T="t",U="u",searchIndex={};
var R=["usize","ixdynimpl","pymodule","Returns `true` if the internal data of the array is…","python","errorkind","result","Get the immutable view of the internal data of `PyArray`,…","option","Construct one-dimension PyArray from a type which…","pyarray","__private__","privatemarker","numpy::error","numpy::error::ErrorKind","pyresult","npy_intp","npy_bool","npy_order","npy_scalarkind","npy_clipmode","npy_sortkind","pyarray_vectorunaryfunc","npy_datetimeunit","npy_datetime","npy_casting","npy_uint32","pydatamem_eventhookfunc","npy_selectkind","numpy::npyffi","ob_base","strides","dimensions","coordinates","backstrides","contiguous","limits_sizes","translate","dataptr","npy_timedelta","pyufuncgenericfunction","npydatatype","numpy::array","pytypeobject","with_borrowed_ptr","ordering","pyobject","pystring","pyiterator","pydowncasterror","try_from","to_string","try_into","borrow_mut","type_id","into_py","from_py","numpy::npyffi::array","borrow","typeid","numpy::npyffi::objects","to_owned","clone_into","numpy::npyffi::types","numpy::npyffi::ufunc","numpy::types","into_pyerr","into_pyerr_with","is_same_type","npy_data_type","typenum_default","pyarray_dims","npy_cdouble","npy_cfloat","npy_clongdouble","npy_searchside","npy_datetimestruct","npy_timedeltastruct","npy_stride_sort_item","npy_types","formatter","init_type","IntoPyArray","ToPyArray","ToNpyDims","NpyIndex","ArrayDim","ErrorKind","IntoPyErr","IntoPyResult","ArrayType","PyArrayAPI_Inner","PyArrayObject","PyArray_Descr","PyArrray_ArrayDescr","PyArray_ArrFuncs","PyArrayFlagsObject","PyArray_Dims","PyArray_Chunk","PyArrayInterface","PyUFuncObject","PyArrayIterObject","PyArrayMultiIterObject","PyArrayNeighborhoodIterObject","PyArrayMapIterObject","NpyAuxData","NPY_ORDER","NPY_SCALARKIND","NPY_SORTKIND","NPY_SEARCHSIDE","NPY_DATETIMEUNIT","NPY_TYPES","NPY_SELECTKIND","NPY_CASTING","NPY_CLIPMODE","PyUFuncAPI_Inner","NpyDataType","PyArrayAPI","PyUFuncAPI"];

searchIndex["numpy"]={"doc":"`rust-numpy` provides Rust interfaces for NumPy C APIs,…","i":[[6,"c32","numpy",E,N,N],[6,"c64",E,E,N,N],[6,"Ix1",E,"one-dimensional",N,N],[5,"Ix1",E,"Create a one-dimensional index",N,[[[R[0]]],["dim"]]],[6,"Ix2",E,"two-dimensional",N,N],[5,"Ix2",E,"Create a two-dimensional index",N,[[[R[0]]],["dim"]]],[6,"Ix3",E,"three-dimensional",N,N],[5,"Ix3",E,"Create a three-dimensional index",N,[[[R[0]]],["dim"]]],[6,"Ix4",E,"four-dimensional",N,N],[5,"Ix4",E,"Create a four-dimensional index",N,[[[R[0]]],["dim"]]],[6,"Ix5",E,"five-dimensional",N,N],[5,"Ix5",E,"Create a five-dimensional index",N,[[[R[0]]],["dim"]]],[6,"Ix6",E,"six-dimensional",N,N],[5,"Ix6",E,"Create a six-dimensional index",N,[[[R[0]]],["dim"]]],[6,"IxDyn",E,"dynamic-dimensional",N,N],[5,"IxDyn",E,"Create a dynamic-dimensional index",N,[[],[["dim",[R[1]]],[R[1]]]]],[0,"array",E,"Safe interface for NumPy ndarray",N,N],[3,"PyArray",R[42],"A safe, static-typed interface for NumPy ndarray.",N,N],[5,"get_array_module",E,"Returns a array module.",N,[[[R[4]]],[[R[15],[R[2]]],[R[2]]]]],[6,"PyArray1",E,"one-dimensional array",N,N],[6,"PyArray2",E,"two-dimensional array",N,N],[6,"PyArray3",E,"three-dimensional array",N,N],[6,"PyArray4",E,"four-dimensional array",N,N],[6,"PyArray5",E,"five-dimensional array",N,N],[6,"PyArray6",E,"six-dimensional array",N,N],[6,"PyArrayDyn",E,"dynamic-dimensional array",N,N],[11,"as_array_ptr",E,"Gets a raw `PyArrayObject` pointer.",0,[[["self"]]]],[11,"is_contiguous",E,R[3],0,[[["self"]],["bool"]]],[11,"is_fotran_contiguous",E,R[3],0,[[["self"]],["bool"]]],[11,"is_c_contiguous",E,R[3],0,[[["self"]],["bool"]]],[11,R[61],E,"Get `Py<PyArray>` from `&PyArray`, which is the owned…",0,[[["self"]],["py"]]],[11,"from_owned_ptr",E,"Constructs `PyArray` from raw python object without…",0,[[[R[4]]],["self"]]],[11,"from_borrowed_ptr",E,"Constructs PyArray from raw python object and increments…",0,[[[R[4]]],["self"]]],[11,"ndim",E,"Returns the number of dimensions in the array.",0,[[["self"]],[R[0]]]],[11,R[31],E,"Returns a slice which contains how many bytes you need to…",0,[[["self"]]]],[11,"shape",E,"Returns a slice which contains dimmensions of the array.",0,[[["self"]]]],[11,"len",E,"Calcurates the total number of elements in the array.",0,[[["self"]],[R[0]]]],[11,"dims",E,"Same as shape, but returns `D`",0,[[["self"]],["d"]]],[11,"new",E,"Creates a new uninitialized PyArray in python heap.",0,[[[R[4]],["id"],["bool"]],["self"]]],[11,"zeros",E,"Construct a new nd-dimensional array filled with 0.",0,[[[R[4]],["id"],["bool"]],["self"]]],[11,"as_slice",E,R[7],0,[[["self"]],[[R[5]],[R[6],[R[5]]]]]],[11,"as_slice_mut",E,"Get the mmutable view of the internal data of `PyArray`,…",0,[[["self"]],[[R[5]],[R[6],[R[5]]]]]],[11,"from_array",E,"Construct PyArray from `ndarray::ArrayBase`.",0,[[[R[4]],["arraybase"]],["self"]]],[11,"from_owned_array",E,"Construct PyArray from `ndarray::Array`.",0,[[[R[4]],["array"]],["self"]]],[11,"as_array",E,R[7],0,[[["self"]],["arrayview"]]],[11,"as_array_mut",E,"Almost same as `as_array`, but returns `ArrayViewMut`.",0,[[["self"]],["arrayviewmut"]]],[11,"get",E,"Get an immutable reference of a specified element, with…",0,[[["idx"],["self"]],[[T],[R[8]]]]],[11,"get_mut",E,"Same as get, but returns `Option<&mut T>`.",0,[[["idx"],["self"]],[[T],[R[8]]]]],[11,"uget",E,"Get an immutable reference of a specified element, without…",0,[[["idx"],["self"]],[T]]],[11,"uget_mut",E,"Same as uget, but returns `&mut T`.",0,[[["idx"],["self"]],[T]]],[11,"into_dyn",E,"Get dynamic dimensioned array from fixed dimension array.",0,[[["self"]],[R[10]]]],[11,"to_owned_array",E,"Get a copy of `PyArray` as `ndarray::Array`.",0,[[["self"]],["array"]]],[11,"from_slice",E,"Construct one-dimension PyArray from slice.",0,[[[R[4]]],["self"]]],[11,"from_vec",E,"Construct one-dimension PyArray from `Vec`.",0,[[[R[4]],["vec"]],["self"]]],[11,"from_exact_iter",E,R[9],0,[[[R[4]]],["self"]]],[11,"from_iter",E,R[9],0,[[[R[4]]],["self"]]],[11,"resize",E,"Extends or trancates the length of 1 dimension PyArray.",0,[[["self"],[R[0]]],[[R[5]],[R[6],[R[5]]]]]],[11,"from_vec2",E,"Construct a two-dimension PyArray from `Vec<Vec<T>>`.",0,[[[R[4]],["vec"]],[[R[5]],["self"],[R[6],[R[5]]]]]],[11,"from_vec3",E,"Construct a three-dimension PyArray from `Vec<Vec<Vec<T>>>`.",0,[[[R[4]],["vec"]],[[R[5]],["self"],[R[6],[R[5]]]]]],[11,"data_type",E,"Returns the scalar type of the array.",0,[[["self"]],[R[41]]]],[11,"copy_to",E,"Copies self into `other`, performing a data-type…",0,[[[R[10]],["self"]],[[R[5]],[R[6],[R[5]]]]]],[11,"cast",E,"Cast the `PyArray<T>` to `PyArray<U>`, by allocating a new…",0,[[["self"],["bool"]],[[R[6],[R[10],R[5]]],[R[5]],[R[10]]]]],[11,"reshape",E,"Construct a new array which has same values as self, same…",0,[[["self"],["id"]],[[R[10]],[R[5]],[R[6],[R[10],R[5]]]]]],[11,"reshape_with_order",E,"Same as reshape, but you can change the order of returned…",0,[[["self"],["id"],[R[18]]],[[R[10]],[R[5]],[R[6],[R[10],R[5]]]]]],[11,"arange",E,"Return evenly spaced values within a given interval. Same…",0,[[[R[4]],[T]],["self"]]],[0,"convert","numpy","Defines conversion traits between rust types and numpy…",N,N],[8,R[82],"numpy::convert","Covnersion trait from some rust types to `PyArray`.",N,N],[16,"Item",E,E,1,N],[16,"Dim",E,E,1,N],[10,"into_pyarray",E,E,1,[[[R[4]]],[R[10]]]],[8,R[83],E,"Conversion trait from rust types to `PyArray`.",N,N],[16,"Item",E,E,2,N],[16,"Dim",E,E,2,N],[10,"to_pyarray",E,E,2,[[[R[4]],["self"]],[R[10]]]],[8,R[84],E,"Utility trait to specify the dimention of array",N,N],[11,"ndim_cint",E,E,3,[[["self"]],["c_int"]]],[11,"as_dims_ptr",E,E,3,[[["self"]]]],[11,"to_npy_dims",E,E,3,[[["self"]],[R[71]]]],[10,R[11],E,E,3,[[["self"]],[R[12]]]],[8,R[85],E,"Types that can be used to index an array.",N,N],[10,"get_checked",E,E,4,[[],[["isize"],[R[8],["isize"]]]]],[10,"get_unchecked",E,E,4,[[],["isize"]]],[10,R[11],E,E,4,[[],[R[12]]]],[0,"error","numpy","Defines error types.",N,N],[3,R[86],R[13],"Represents a dimension and dtype of numpy array.",N,N],[12,"dim",E,E,5,N],[12,"dtype",E,E,5,N],[4,R[87],E,"Represents a casting error between rust types and numpy…",N,N],[13,"PyToRust",E,"Error for casting `PyArray` into `ArrayView` or…",6,N],[12,"from",R[14],E,6,N],[12,"to",E,E,6,N],[13,"FromVec",R[13],"Error for casting rust's `Vec` into numpy array.",6,N],[12,"dim1",R[14],E,6,N],[12,"dim2",E,E,6,N],[13,"Python",R[13],"Error occured in Python iterpreter",6,N],[13,"NotContiguous",E,"The array need to be contiguous to finish the opretion",6,N],[8,R[88],E,E,N,N],[10,R[66],E,E,7,[[],["pyerr"]]],[10,R[67],E,E,7,[[],["pyerr"]]],[8,R[89],E,E,N,N],[16,"ValueType",E,E,8,N],[10,"into_pyresult",E,E,8,[[],[R[15]]]],[10,"into_pyresult_with",E,E,8,[[],[R[15]]]],[0,"npyffi","numpy","Low-Level bindings for NumPy C API.",N,N],[0,"array",R[29],"Low-Level binding for Array API",N,N],[3,R[117],R[57],E,N,N],[3,R[91],E,E,N,N],[4,R[90],E,E,N,N],[13,"PyBigArray_Type",E,E,9,N],[13,"PyArray_Type",E,E,9,N],[13,"PyArrayDescr_Type",E,E,9,N],[13,"PyArrayFlags_Type",E,E,9,N],[13,"PyArrayIter_Type",E,E,9,N],[13,"PyArrayMultiIter_Type",E,E,9,N],[13,"NPY_NUMUSERTYPES",E,E,9,N],[13,"PyBoolArrType_Type",E,E,9,N],[13,"_PyArrayScalar_BoolValues",E,E,9,N],[13,"PyGenericArrType_Type",E,E,9,N],[13,"PyNumberArrType_Type",E,E,9,N],[13,"PyIntegerArrType_Type",E,E,9,N],[13,"PySignedIntegerArrType_Type",E,E,9,N],[13,"PyUnsignedIntegerArrType_Type",E,E,9,N],[13,"PyInexactArrType_Type",E,E,9,N],[13,"PyFloatingArrType_Type",E,E,9,N],[13,"PyComplexFloatingArrType_Type",E,E,9,N],[13,"PyFlexibleArrType_Type",E,E,9,N],[13,"PyCharacterArrType_Type",E,E,9,N],[13,"PyByteArrType_Type",E,E,9,N],[13,"PyShortArrType_Type",E,E,9,N],[13,"PyIntArrType_Type",E,E,9,N],[13,"PyLongArrType_Type",E,E,9,N],[13,"PyLongLongArrType_Type",E,E,9,N],[13,"PyUByteArrType_Type",E,E,9,N],[13,"PyUShortArrType_Type",E,E,9,N],[13,"PyUIntArrType_Type",E,E,9,N],[13,"PyULongArrType_Type",E,E,9,N],[13,"PyULongLongArrType_Type",E,E,9,N],[13,"PyFloatArrType_Type",E,E,9,N],[13,"PyDoubleArrType_Type",E,E,9,N],[13,"PyLongDoubleArrType_Type",E,E,9,N],[13,"PyCFloatArrType_Type",E,E,9,N],[13,"PyCDoubleArrType_Type",E,E,9,N],[13,"PyCLongDoubleArrType_Type",E,E,9,N],[13,"PyObjectArrType_Type",E,E,9,N],[13,"PyStringArrType_Type",E,E,9,N],[13,"PyUnicodeArrType_Type",E,E,9,N],[13,"PyVoidArrType_Type",E,E,9,N],[5,"PyArray_Check",E,E,N,[[],["c_int"]]],[5,"PyArray_CheckExact",E,E,N,[[],["c_int"]]],[7,"PY_ARRAY_API",E,"A global variable which stores a 'capsule' pointer to…",N,N],[11,"PyArray_GetNDArrayCVersion",E,E,10,[[["self"]],["c_uint"]]],[11,"PyArray_SetNumericOps",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_GetNumericOps",E,E,10,[[["self"]]]],[11,"PyArray_INCREF",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_XDECREF",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_SetStringFunction",E,E,10,[[["self"],["c_int"]]]],[11,"PyArray_DescrFromType",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_TypeObjectFromType",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_Zero",E,E,10,[[["self"]]]],[11,"PyArray_One",E,E,10,[[["self"]]]],[11,"PyArray_CastToType",E,E,10,[[["self"],["c_int"]]]],[11,"PyArray_CastTo",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_CastAnyTo",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_CanCastSafely",E,E,10,[[["c_int"],["self"]],["c_int"]]],[11,"PyArray_CanCastTo",E,E,10,[[["self"]],[R[17]]]],[11,"PyArray_ObjectType",E,E,10,[[["self"],["c_int"]],["c_int"]]],[11,"PyArray_DescrFromObject",E,E,10,[[["self"]]]],[11,"PyArray_ConvertToCommonType",E,E,10,[[["self"]]]],[11,"PyArray_DescrFromScalar",E,E,10,[[["self"]]]],[11,"PyArray_DescrFromTypeObject",E,E,10,[[["self"]]]],[11,"PyArray_Size",E,E,10,[[["self"]],[R[16]]]],[11,"PyArray_Scalar",E,E,10,[[["self"]]]],[11,"PyArray_FromScalar",E,E,10,[[["self"]]]],[11,"PyArray_ScalarAsCtype",E,E,10,[[["self"]]]],[11,"PyArray_CastScalarToCtype",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_CastScalarDirect",E,E,10,[[["c_int"],["self"]],["c_int"]]],[11,"PyArray_ScalarFromObject",E,E,10,[[["self"]]]],[11,"PyArray_GetCastFunc",E,E,10,[[["self"],["c_int"]],[R[22]]]],[11,"PyArray_FromDims",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_FromDimsAndDataAndDescr",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_FromAny",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_EnsureArray",E,E,10,[[["self"]]]],[11,"PyArray_EnsureAnyArray",E,E,10,[[["self"]]]],[11,"PyArray_FromFile",E,E,10,[[[R[16]],["self"]]]],[11,"PyArray_FromString",E,E,10,[[[R[16]],["self"]]]],[11,"PyArray_FromBuffer",E,E,10,[[[R[16]],["self"]]]],[11,"PyArray_FromIter",E,E,10,[[[R[16]],["self"]]]],[11,"PyArray_Return",E,E,10,[[["self"]]]],[11,"PyArray_GetField",E,E,10,[[["self"],["c_int"]]]],[11,"PyArray_SetField",E,E,10,[[["self"],["c_int"]],["c_int"]]],[11,"PyArray_Byteswap",E,E,10,[[[R[17]],["self"]]]],[11,"PyArray_Resize",E,E,10,[[[R[18]],["c_int"],["self"]]]],[11,"PyArray_MoveInto",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_CopyInto",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_CopyAnyInto",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_CopyObject",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_NewCopy",E,E,10,[[["self"],[R[18]]]]],[11,"PyArray_ToList",E,E,10,[[["self"]]]],[11,"PyArray_ToString",E,E,10,[[["self"],[R[18]]]]],[11,"PyArray_ToFile",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_Dump",E,E,10,[[["self"],["c_int"]],["c_int"]]],[11,"PyArray_Dumps",E,E,10,[[["self"],["c_int"]]]],[11,"PyArray_ValidType",E,E,10,[[["c_int"],["self"]],["c_int"]]],[11,"PyArray_UpdateFlags",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_New",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_NewFromDescr",E,E,10,[[["self"],["c_int"]]]],[11,"PyArray_DescrNew",E,E,10,[[["self"]]]],[11,"PyArray_DescrNewFromType",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_GetPriority",E,E,10,[[["self"],["f64"]],["f64"]]],[11,"PyArray_IterNew",E,E,10,[[["self"]]]],[11,"PyArray_PyIntAsInt",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_PyIntAsIntp",E,E,10,[[["self"]],[R[16]]]],[11,"PyArray_Broadcast",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_FillObjectArray",E,E,10,[[["self"]]]],[11,"PyArray_FillWithScalar",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_CheckStrides",E,E,10,[[[R[16]],["c_int"],["self"]],[R[17]]]],[11,"PyArray_DescrNewByteorder",E,E,10,[[["self"],["c_char"]]]],[11,"PyArray_IterAllButAxis",E,E,10,[[["self"]]]],[11,"PyArray_CheckFromAny",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_FromArray",E,E,10,[[["self"],["c_int"]]]],[11,"PyArray_FromInterface",E,E,10,[[["self"]]]],[11,"PyArray_FromStructInterface",E,E,10,[[["self"]]]],[11,"PyArray_FromArrayAttr",E,E,10,[[["self"]]]],[11,"PyArray_ScalarKind",E,E,10,[[["c_int"],["self"]],[R[19]]]],[11,"PyArray_CanCoerceScalar",E,E,10,[[[R[19]],["c_int"],["self"]],["c_int"]]],[11,"PyArray_NewFlagsObject",E,E,10,[[["self"]]]],[11,"PyArray_CanCastScalar",E,E,10,[[["self"]],[R[17]]]],[11,"PyArray_CompareUCS4",E,E,10,[[["self"],[R[0]]],["c_int"]]],[11,"PyArray_RemoveSmallest",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_ElementStrides",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_Item_INCREF",E,E,10,[[["self"]]]],[11,"PyArray_Item_XDECREF",E,E,10,[[["self"]]]],[11,"PyArray_FieldNames",E,E,10,[[["self"]]]],[11,"PyArray_Transpose",E,E,10,[[["self"]]]],[11,"PyArray_TakeFrom",E,E,10,[[[R[20]],["self"],["c_int"]]]],[11,"PyArray_PutTo",E,E,10,[[[R[20]],["self"]]]],[11,"PyArray_PutMask",E,E,10,[[["self"]]]],[11,"PyArray_Repeat",E,E,10,[[["self"],["c_int"]]]],[11,"PyArray_Choose",E,E,10,[[[R[20]],["self"]]]],[11,"PyArray_Sort",E,E,10,[[["c_int"],["self"],[R[21]]],["c_int"]]],[11,"PyArray_ArgSort",E,E,10,[[["c_int"],["self"],[R[21]]]]],[11,"PyArray_SearchSorted",E,E,10,[[[R[75]],["self"]]]],[11,"PyArray_ArgMax",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_ArgMin",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_Reshape",E,E,10,[[["self"]]]],[11,"PyArray_Newshape",E,E,10,[[[R[18]],["self"]]]],[11,"PyArray_Squeeze",E,E,10,[[["self"]]]],[11,"PyArray_View",E,E,10,[[["self"]]]],[11,"PyArray_SwapAxes",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_Max",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_Min",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_Ptp",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_Mean",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_Trace",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_Diagonal",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_Clip",E,E,10,[[["self"]]]],[11,"PyArray_Conjugate",E,E,10,[[["self"]]]],[11,"PyArray_Nonzero",E,E,10,[[["self"]]]],[11,"PyArray_Std",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_Sum",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_CumSum",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_Prod",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_CumProd",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_All",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_Any",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_Compress",E,E,10,[[["self"],["c_int"]]]],[11,"PyArray_Flatten",E,E,10,[[["self"],[R[18]]]]],[11,"PyArray_Ravel",E,E,10,[[["self"],[R[18]]]]],[11,"PyArray_MultiplyList",E,E,10,[[["c_int"],["self"]],[R[16]]]],[11,"PyArray_MultiplyIntList",E,E,10,[[["self"],["c_int"]],["c_int"]]],[11,"PyArray_GetPtr",E,E,10,[[["self"]]]],[11,"PyArray_CompareLists",E,E,10,[[["c_int"],["self"]],["c_int"]]],[11,"PyArray_AsCArray",E,E,10,[[["c_int"],["self"]],["c_int"]]],[11,"PyArray_As1D",E,E,10,[[["c_int"],["self"]],["c_int"]]],[11,"PyArray_As2D",E,E,10,[[["c_int"],["self"]],["c_int"]]],[11,"PyArray_Free",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_Converter",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_IntpFromSequence",E,E,10,[[["self"],["c_int"]],["c_int"]]],[11,"PyArray_Concatenate",E,E,10,[[["self"],["c_int"]]]],[11,"PyArray_InnerProduct",E,E,10,[[["self"]]]],[11,"PyArray_MatrixProduct",E,E,10,[[["self"]]]],[11,"PyArray_CopyAndTranspose",E,E,10,[[["self"]]]],[11,"PyArray_Correlate",E,E,10,[[["self"],["c_int"]]]],[11,"PyArray_TypestrConvert",E,E,10,[[["c_int"],["self"]],["c_int"]]],[11,"PyArray_DescrConverter",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_DescrConverter2",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_IntpConverter",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_BufferConverter",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_AxisConverter",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_BoolConverter",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_ByteorderConverter",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_OrderConverter",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_EquivTypes",E,E,10,[[["self"]],["c_uchar"]]],[11,"PyArray_Zeros",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_Empty",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_Where",E,E,10,[[["self"]]]],[11,"PyArray_Arange",E,E,10,[[["f64"],["self"],["c_int"]]]],[11,"PyArray_ArangeObj",E,E,10,[[["self"]]]],[11,"PyArray_SortkindConverter",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_LexSort",E,E,10,[[["self"],["c_int"]]]],[11,"PyArray_Round",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_EquivTypenums",E,E,10,[[["c_int"],["self"]],["c_uchar"]]],[11,"PyArray_RegisterDataType",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_RegisterCastFunc",E,E,10,[[[R[22]],["self"],["c_int"]],["c_int"]]],[11,"PyArray_RegisterCanCast",E,E,10,[[[R[19]],["self"],["c_int"]],["c_int"]]],[11,"PyArray_InitArrFuncs",E,E,10,[[["self"]]]],[11,"PyArray_IntTupleFromIntp",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_TypeNumFromName",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_ClipmodeConverter",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_OutputConverter",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_BroadcastToShape",E,E,10,[[["self"],["c_int"]]]],[11,"_PyArray_SigintHandler",E,E,10,[[["c_int"],["self"]]]],[11,"_PyArray_GetSigintBuf",E,E,10,[[["self"]]]],[11,"PyArray_DescrAlignConverter",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_DescrAlignConverter2",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_SearchsideConverter",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_CheckAxis",E,E,10,[[["self"],["c_int"]]]],[11,"PyArray_OverflowMultiplyList",E,E,10,[[["c_int"],["self"]],[R[16]]]],[11,"PyArray_CompareString",E,E,10,[[["self"],[R[0]]],["c_int"]]],[11,"PyArray_GetEndianness",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_GetNDArrayCFeatureVersion",E,E,10,[[["self"]],["c_uint"]]],[11,"PyArray_Correlate2",E,E,10,[[["self"],["c_int"]]]],[11,"PyArray_NeighborhoodIterNew",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_SetDatetimeParseFunction",E,E,10,[[["self"]]]],[11,"PyArray_DatetimeToDatetimeStruct",E,E,10,[[[R[24]],[R[23]],["self"]]]],[11,"PyArray_TimedeltaToTimedeltaStruct",E,E,10,[[[R[39]],["self"],[R[23]]]]],[11,"PyArray_DatetimeStructToDatetime",E,E,10,[[["self"],[R[23]]],[R[24]]]],[11,"PyArray_TimedeltaStructToTimedelta",E,E,10,[[["self"],[R[23]]],[R[24]]]],[11,"NpyIter_New",E,E,10,[[[R[25]],[R[26]],[R[18]],["self"]]]],[11,"NpyIter_MultiNew",E,E,10,[[[R[25]],[R[26]],[R[18]],["c_int"],["self"]]]],[11,"NpyIter_AdvancedNew",E,E,10,[[[R[25]],[R[26]],[R[16]],[R[18]],["c_int"],["self"]]]],[11,"NpyIter_Copy",E,E,10,[[["self"]]]],[11,"NpyIter_Deallocate",E,E,10,[[["self"]],["c_int"]]],[11,"NpyIter_HasDelayedBufAlloc",E,E,10,[[["self"]],[R[17]]]],[11,"NpyIter_HasExternalLoop",E,E,10,[[["self"]],[R[17]]]],[11,"NpyIter_EnableExternalLoop",E,E,10,[[["self"]],["c_int"]]],[11,"NpyIter_GetInnerStrideArray",E,E,10,[[["self"]]]],[11,"NpyIter_GetInnerLoopSizePtr",E,E,10,[[["self"]]]],[11,"NpyIter_Reset",E,E,10,[[["self"]],["c_int"]]],[11,"NpyIter_ResetBasePointers",E,E,10,[[["self"]],["c_int"]]],[11,"NpyIter_ResetToIterIndexRange",E,E,10,[[[R[16]],["self"]],["c_int"]]],[11,"NpyIter_GetNDim",E,E,10,[[["self"]],["c_int"]]],[11,"NpyIter_GetNOp",E,E,10,[[["self"]],["c_int"]]],[11,"NpyIter_GetIterNext",E,E,10,[[["self"]],["npyiter_iternextfunc"]]],[11,"NpyIter_GetIterSize",E,E,10,[[["self"]],[R[16]]]],[11,"NpyIter_GetIterIndexRange",E,E,10,[[["self"]]]],[11,"NpyIter_GetIterIndex",E,E,10,[[["self"]],[R[16]]]],[11,"NpyIter_GotoIterIndex",E,E,10,[[[R[16]],["self"]],["c_int"]]],[11,"NpyIter_HasMultiIndex",E,E,10,[[["self"]],[R[17]]]],[11,"NpyIter_GetShape",E,E,10,[[["self"]],["c_int"]]],[11,"NpyIter_GetGetMultiIndex",E,E,10,[[["self"]],["npyiter_getmultiindexfunc"]]],[11,"NpyIter_GotoMultiIndex",E,E,10,[[["self"]],["c_int"]]],[11,"NpyIter_RemoveMultiIndex",E,E,10,[[["self"]],["c_int"]]],[11,"NpyIter_HasIndex",E,E,10,[[["self"]],[R[17]]]],[11,"NpyIter_IsBuffered",E,E,10,[[["self"]],[R[17]]]],[11,"NpyIter_IsGrowInner",E,E,10,[[["self"]],[R[17]]]],[11,"NpyIter_GetBufferSize",E,E,10,[[["self"]],[R[16]]]],[11,"NpyIter_GetIndexPtr",E,E,10,[[["self"]]]],[11,"NpyIter_GotoIndex",E,E,10,[[[R[16]],["self"]],["c_int"]]],[11,"NpyIter_GetDataPtrArray",E,E,10,[[["self"]]]],[11,"NpyIter_GetDescrArray",E,E,10,[[["self"]]]],[11,"NpyIter_GetOperandArray",E,E,10,[[["self"]]]],[11,"NpyIter_GetIterView",E,E,10,[[[R[16]],["self"]]]],[11,"NpyIter_GetReadFlags",E,E,10,[[["self"]]]],[11,"NpyIter_GetWriteFlags",E,E,10,[[["self"]]]],[11,"NpyIter_DebugPrint",E,E,10,[[["self"]]]],[11,"NpyIter_IterationNeedsAPI",E,E,10,[[["self"]],[R[17]]]],[11,"NpyIter_GetInnerFixedStrideArray",E,E,10,[[["self"]]]],[11,"NpyIter_RemoveAxis",E,E,10,[[["c_int"],["self"]],["c_int"]]],[11,"NpyIter_GetAxisStrideArray",E,E,10,[[["c_int"],["self"]]]],[11,"NpyIter_RequiresBuffering",E,E,10,[[["self"]],[R[17]]]],[11,"NpyIter_GetInitialDataPtrArray",E,E,10,[[["self"]]]],[11,"NpyIter_CreateCompatibleStrides",E,E,10,[[[R[16]],["self"]],["c_int"]]],[11,"PyArray_CastingConverter",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_CountNonzero",E,E,10,[[["self"]],[R[16]]]],[11,"PyArray_PromoteTypes",E,E,10,[[["self"]]]],[11,"PyArray_MinScalarType",E,E,10,[[["self"]]]],[11,"PyArray_ResultType",E,E,10,[[[R[16]],["self"]]]],[11,"PyArray_CanCastArrayTo",E,E,10,[[[R[25]],["self"]],[R[17]]]],[11,"PyArray_CanCastTypeTo",E,E,10,[[[R[25]],["self"]],[R[17]]]],[11,"PyArray_EinsteinSum",E,E,10,[[[R[25]],[R[16]],[R[18]],["self"]]]],[11,"PyArray_NewLikeArray",E,E,10,[[[R[18]],["self"],["c_int"]]]],[11,"PyArray_GetArrayParamsFromObject",E,E,10,[[[R[17]],["self"]],["c_int"]]],[11,"PyArray_ConvertClipmodeSequence",E,E,10,[[["c_int"],["self"]],["c_int"]]],[11,"PyArray_MatrixProduct2",E,E,10,[[["self"]]]],[11,"NpyIter_IsFirstVisit",E,E,10,[[["c_int"],["self"]],[R[17]]]],[11,"PyArray_SetBaseObject",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_CreateSortedStridePerm",E,E,10,[[["c_int"],["self"]]]],[11,"PyArray_RemoveAxesInPlace",E,E,10,[[["self"]]]],[11,"PyArray_DebugPrint",E,E,10,[[["self"]]]],[11,"PyArray_FailUnlessWriteable",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_SetUpdateIfCopyBase",E,E,10,[[["self"]],["c_int"]]],[11,"PyDataMem_NEW",E,E,10,[[["self"],[R[0]]]]],[11,"PyDataMem_FREE",E,E,10,[[["self"]]]],[11,"PyDataMem_RENEW",E,E,10,[[[R[0]],["self"]]]],[11,"PyDataMem_SetEventHook",E,E,10,[[[R[27]],["self"]],[R[27]]]],[11,"PyArray_MapIterSwapAxes",E,E,10,[[["self"],["c_int"]]]],[11,"PyArray_MapIterArray",E,E,10,[[["self"]]]],[11,"PyArray_MapIterNext",E,E,10,[[["self"]]]],[11,"PyArray_Partition",E,E,10,[[["c_int"],["self"],[R[28]]],["c_int"]]],[11,"PyArray_ArgPartition",E,E,10,[[["c_int"],["self"],[R[28]]]]],[11,"PyArray_SelectkindConverter",E,E,10,[[["self"]],["c_int"]]],[11,"PyDataMem_NEW_ZEROED",E,E,10,[[["self"],[R[0]]]]],[11,"PyArray_CheckAnyScalarExact",E,E,10,[[["self"]],["c_int"]]],[11,"PyArray_MapIterArrayCopyIfOverlap",E,E,10,[[["self"],["c_int"]]]],[11,"get_type_object",E,E,10,[[["self"],["arraytype"]]]],[0,"flags",R[29],E,N,N],[17,"NPY_ARRAY_C_CONTIGUOUS","numpy::npyffi::flags",E,N,N],[17,"NPY_ARRAY_F_CONTIGUOUS",E,E,N,N],[17,"NPY_ARRAY_OWNDATA",E,E,N,N],[17,"NPY_ARRAY_FORCECAST",E,E,N,N],[17,"NPY_ARRAY_ENSURECOPY",E,E,N,N],[17,"NPY_ARRAY_ENSUREARRAY",E,E,N,N],[17,"NPY_ARRAY_ELEMENTSTRIDES",E,E,N,N],[17,"NPY_ARRAY_ALIGNED",E,E,N,N],[17,"NPY_ARRAY_NOTSWAPPED",E,E,N,N],[17,"NPY_ARRAY_WRITEABLE",E,E,N,N],[17,"NPY_ARRAY_UPDATEIFCOPY",E,E,N,N],[17,"NPY_ARRAY_WRITEBACKIFCOPY",E,E,N,N],[17,"NPY_ARRAY_BEHAVED",E,E,N,N],[17,"NPY_ARRAY_BEHAVED_NS",E,E,N,N],[17,"NPY_ARRAY_CARRAY",E,E,N,N],[17,"NPY_ARRAY_CARRAY_RO",E,E,N,N],[17,"NPY_ARRAY_FARRAY",E,E,N,N],[17,"NPY_ARRAY_FARRAY_RO",E,E,N,N],[17,"NPY_ARRAY_DEFAULT",E,E,N,N],[17,"NPY_ARRAY_IN_ARRAY",E,E,N,N],[17,"NPY_ARRAY_OUT_ARRAY",E,E,N,N],[17,"NPY_ARRAY_INOUT_ARRAY",E,E,N,N],[17,"NPY_ARRAY_INOUT_ARRAY2",E,E,N,N],[17,"NPY_ARRAY_IN_FARRAY",E,E,N,N],[17,"NPY_ARRAY_OUT_FARRAY",E,E,N,N],[17,"NPY_ARRAY_INOUT_FARRAY",E,E,N,N],[17,"NPY_ARRAY_INOUT_FARRAY2",E,E,N,N],[17,"NPY_ARRAY_UPDATE_ALL",E,E,N,N],[0,"objects",R[29],"Low-Lebel binding for NumPy C API C-objects",N,N],[3,R[92],R[60],E,N,N],[12,R[30],E,E,11,N],[12,"data",E,E,11,N],[12,"nd",E,E,11,N],[12,R[32],E,E,11,N],[12,R[31],E,E,11,N],[12,"base",E,E,11,N],[12,"descr",E,E,11,N],[12,"flags",E,E,11,N],[12,"weakreflist",E,E,11,N],[3,R[93],E,E,N,N],[12,R[30],E,E,12,N],[12,"typeobj",E,E,12,N],[12,"kind",E,E,12,N],[12,"type_",E,E,12,N],[12,"byteorder",E,E,12,N],[12,"flags",E,E,12,N],[12,"type_num",E,E,12,N],[12,"elsize",E,E,12,N],[12,"alignment",E,E,12,N],[12,"subarray",E,E,12,N],[12,"fields",E,E,12,N],[12,"names",E,E,12,N],[12,"f",E,E,12,N],[12,"metadata",E,E,12,N],[12,"c_metadata",E,E,12,N],[12,"hash",E,E,12,N],[3,R[94],E,E,N,N],[12,"base",E,E,13,N],[12,"shape",E,E,13,N],[3,R[95],E,E,N,N],[12,"cast",E,E,14,N],[12,"getitem",E,E,14,N],[12,"setitem",E,E,14,N],[12,"copyswapn",E,E,14,N],[12,"copyswap",E,E,14,N],[12,"compare",E,E,14,N],[12,"argmax",E,E,14,N],[12,"dotfunc",E,E,14,N],[12,"scanfunc",E,E,14,N],[12,"fromstr",E,E,14,N],[12,"nonzero",E,E,14,N],[12,"fill",E,E,14,N],[12,"fillwithscalar",E,E,14,N],[12,"sort",E,E,14,N],[12,"argsort",E,E,14,N],[12,"castdict",E,E,14,N],[12,"scalarkind",E,E,14,N],[12,"cancastscalarkindto",E,E,14,N],[12,"cancastto",E,E,14,N],[12,"fastclip",E,E,14,N],[12,"fastputmask",E,E,14,N],[12,"fasttake",E,E,14,N],[12,"argmin",E,E,14,N],[3,R[96],E,E,N,N],[12,R[30],E,E,15,N],[12,"arr",E,E,15,N],[12,"flags",E,E,15,N],[3,R[97],E,E,N,N],[12,"ptr",E,E,16,N],[12,"len",E,E,16,N],[3,R[98],E,E,N,N],[12,R[30],E,E,17,N],[12,"base",E,E,17,N],[12,"ptr",E,E,17,N],[12,"len",E,E,17,N],[12,"flags",E,E,17,N],[3,R[99],E,E,N,N],[12,"two",E,E,18,N],[12,"nd",E,E,18,N],[12,"typekind",E,E,18,N],[12,"itemsize",E,E,18,N],[12,"flags",E,E,18,N],[12,"shape",E,E,18,N],[12,R[31],E,E,18,N],[12,"data",E,E,18,N],[12,"descr",E,E,18,N],[3,R[100],E,E,N,N],[12,R[30],E,E,19,N],[12,"nin",E,E,19,N],[12,"nout",E,E,19,N],[12,"nargs",E,E,19,N],[12,"identity",E,E,19,N],[12,"functions",E,E,19,N],[12,"data",E,E,19,N],[12,"ntypes",E,E,19,N],[12,"reserved1",E,E,19,N],[12,"name",E,E,19,N],[12,"types",E,E,19,N],[12,"doc",E,E,19,N],[12,"ptr",E,E,19,N],[12,"obj",E,E,19,N],[12,"userloops",E,E,19,N],[12,"core_enabled",E,E,19,N],[12,"core_num_dim_ix",E,E,19,N],[12,"core_num_dims",E,E,19,N],[12,"core_dim_ixs",E,E,19,N],[12,"core_offsets",E,E,19,N],[12,"core_signature",E,E,19,N],[12,"type_resolver",E,E,19,N],[12,"legacy_inner_loop_selector",E,E,19,N],[12,"reserved2",E,E,19,N],[12,"masked_inner_loop_selector",E,E,19,N],[12,"op_flags",E,E,19,N],[12,"iter_flags",E,E,19,N],[3,"NpyIter",E,E,N,N],[3,R[101],E,E,N,N],[12,R[30],E,E,20,N],[12,"nd_m1",E,E,20,N],[12,"index",E,E,20,N],[12,"size",E,E,20,N],[12,R[33],E,E,20,N],[12,"dims_m1",E,E,20,N],[12,R[31],E,E,20,N],[12,R[34],E,E,20,N],[12,"factors",E,E,20,N],[12,"ao",E,E,20,N],[12,R[38],E,E,20,N],[12,R[35],E,E,20,N],[12,"bounds",E,E,20,N],[12,"limits",E,E,20,N],[12,R[36],E,E,20,N],[12,R[37],E,E,20,N],[3,R[102],E,E,N,N],[12,R[30],E,E,21,N],[12,"numiter",E,E,21,N],[12,"size",E,E,21,N],[12,"index",E,E,21,N],[12,"nd",E,E,21,N],[12,R[32],E,E,21,N],[12,"iters",E,E,21,N],[3,R[103],E,E,N,N],[12,R[30],E,E,22,N],[12,"nd_m1",E,E,22,N],[12,"index",E,E,22,N],[12,"size",E,E,22,N],[12,R[33],E,E,22,N],[12,"dims_m1",E,E,22,N],[12,R[31],E,E,22,N],[12,R[34],E,E,22,N],[12,"factors",E,E,22,N],[12,"ao",E,E,22,N],[12,R[38],E,E,22,N],[12,R[35],E,E,22,N],[12,"bounds",E,E,22,N],[12,"limits",E,E,22,N],[12,R[36],E,E,22,N],[12,R[37],E,E,22,N],[12,"nd",E,E,22,N],[12,R[32],E,E,22,N],[12,"_internal_iter",E,E,22,N],[12,"constant",E,E,22,N],[12,"mode",E,E,22,N],[3,R[104],E,E,N,N],[12,R[30],E,E,23,N],[12,"numiter",E,E,23,N],[12,"size",E,E,23,N],[12,"index",E,E,23,N],[12,"nd",E,E,23,N],[12,R[32],E,E,23,N],[12,"outer",E,E,23,N],[12,"unused",E,E,23,N],[12,"array",E,E,23,N],[12,"ait",E,E,23,N],[12,"subspace",E,E,23,N],[12,"iteraxes",E,E,23,N],[12,"fancy_strides",E,E,23,N],[12,"baseoffset",E,E,23,N],[12,"consec",E,E,23,N],[12,R[38],E,E,23,N],[12,"nd_fancy",E,E,23,N],[12,"fancy_dims",E,E,23,N],[12,"needs_api",E,E,23,N],[12,"extra_op",E,E,23,N],[12,"extra_op_dtype",E,E,23,N],[12,"extra_op_flags",E,E,23,N],[12,"extra_op_iter",E,E,23,N],[12,"extra_op_next",E,E,23,N],[12,"extra_op_ptrs",E,E,23,N],[12,"outer_next",E,E,23,N],[12,"outer_ptrs",E,E,23,N],[12,"outer_strides",E,E,23,N],[12,"subspace_iter",E,E,23,N],[12,"subspace_next",E,E,23,N],[12,"subspace_ptrs",E,E,23,N],[12,"subspace_strides",E,E,23,N],[12,"iter_count",E,E,23,N],[3,R[105],E,E,N,N],[12,"free",E,E,24,N],[12,"clone",E,E,24,N],[12,"reserved",E,E,24,N],[6,"PyArray_GetItemFunc",E,E,N,N],[6,"PyArray_SetItemFunc",E,E,N,N],[6,"PyArray_CopySwapNFunc",E,E,N,N],[6,"PyArray_CopySwapFunc",E,E,N,N],[6,"PyArray_NonzeroFunc",E,E,N,N],[6,"PyArray_CompareFunc",E,E,N,N],[6,"PyArray_ArgFunc",E,E,N,N],[6,"PyArray_DotFunc",E,E,N,N],[6,"PyArray_VectorUnaryFunc",E,E,N,N],[6,"PyArray_ScanFunc",E,E,N,N],[6,"PyArray_FromStrFunc",E,E,N,N],[6,"PyArray_FillFunc",E,E,N,N],[6,"PyArray_SortFunc",E,E,N,N],[6,"PyArray_ArgSortFunc",E,E,N,N],[6,"PyArray_PartitionFunc",E,E,N,N],[6,"PyArray_ArgPartitionFunc",E,E,N,N],[6,"PyArray_FillWithScalarFunc",E,E,N,N],[6,"PyArray_ScalarKindFunc",E,E,N,N],[6,"PyArray_FastClipFunc",E,E,N,N],[6,"PyArray_FastPutmaskFunc",E,E,N,N],[6,"PyArray_FastTakeFunc",E,E,N,N],[6,"PyUFuncGenericFunction",E,E,N,N],[6,"PyUFunc_MaskedStridedInnerLoopFunc",E,E,N,N],[6,"PyUFunc_TypeResolutionFunc",E,E,N,N],[6,"PyUFunc_LegacyInnerLoopSelectionFunc",E,E,N,N],[6,"PyUFunc_MaskedInnerLoopSelectionFunc",E,E,N,N],[6,"NpyIter_IterNextFunc",E,E,N,N],[6,"NpyIter_GetMultiIndexFunc",E,E,N,N],[6,"PyDataMem_EventHookFunc",E,E,N,N],[6,"npy_iter_get_dataptr_t",E,E,N,N],[6,"NpyAuxData_FreeFunc",E,E,N,N],[6,"NpyAuxData_CloneFunc",E,E,N,N],[0,"types",R[29],E,N,N],[3,R[72],R[63],E,N,N],[12,"real",E,E,25,N],[12,"imag",E,E,25,N],[3,R[73],E,E,N,N],[12,"real",E,E,26,N],[12,"imag",E,E,26,N],[3,R[74],E,E,N,N],[12,"real",E,E,27,N],[12,"imag",E,E,27,N],[3,R[76],E,E,N,N],[12,"year",E,E,28,N],[12,"month",E,E,28,N],[12,"day",E,E,28,N],[12,"hour",E,E,28,N],[12,"min",E,E,28,N],[12,"sec",E,E,28,N],[12,"us",E,E,28,N],[12,"ps",E,E,28,N],[12,"as_",E,E,28,N],[3,R[77],E,E,N,N],[12,"day",E,E,29,N],[12,"sec",E,E,29,N],[12,"us",E,E,29,N],[12,"ps",E,E,29,N],[12,"as_",E,E,29,N],[3,R[78],E,E,N,N],[12,"perm",E,E,30,N],[12,"stride",E,E,30,N],[4,R[106],E,E,N,N],[13,"NPY_ANYORDER",E,E,31,N],[13,"NPY_CORDER",E,E,31,N],[13,"NPY_FORTRANORDER",E,E,31,N],[13,"NPY_KEEPORDER",E,E,31,N],[4,R[107],E,E,N,N],[13,"NPY_NOSCALAR",E,E,32,N],[13,"NPY_BOOL_SCALAR",E,E,32,N],[13,"NPY_INTPOS_SCALAR",E,E,32,N],[13,"NPY_INTNEG_SCALAR",E,E,32,N],[13,"NPY_FLOAT_SCALAR",E,E,32,N],[13,"NPY_COMPLEX_SCALAR",E,E,32,N],[13,"NPY_OBJECT_SCALAR",E,E,32,N],[4,R[108],E,E,N,N],[13,"NPY_QUICKSORT",E,E,33,N],[13,"NPY_HEAPSORT",E,E,33,N],[13,"NPY_MERGESORT",E,E,33,N],[4,R[109],E,E,N,N],[13,"NPY_SEARCHLEFT",E,E,34,N],[13,"NPY_SEARCHRIGHT",E,E,34,N],[4,R[110],E,E,N,N],[13,"NPY_FR_Y",E,E,35,N],[13,"NPY_FR_M",E,E,35,N],[13,"NPY_FR_W",E,E,35,N],[13,"NPY_FR_D",E,E,35,N],[13,"NPY_FR_h",E,E,35,N],[13,"NPY_FR_m",E,E,35,N],[13,"NPY_FR_s",E,E,35,N],[13,"NPY_FR_ms",E,E,35,N],[13,"NPY_FR_us",E,E,35,N],[13,"NPY_FR_ns",E,E,35,N],[13,"NPY_FR_ps",E,E,35,N],[13,"NPY_FR_fs",E,E,35,N],[13,"NPY_FR_as",E,E,35,N],[13,"NPY_FR_GENERIC",E,E,35,N],[4,R[111],E,E,N,N],[13,"NPY_BOOL",E,E,36,N],[13,"NPY_BYTE",E,E,36,N],[13,"NPY_UBYTE",E,E,36,N],[13,"NPY_SHORT",E,E,36,N],[13,"NPY_USHORT",E,E,36,N],[13,"NPY_INT",E,E,36,N],[13,"NPY_UINT",E,E,36,N],[13,"NPY_LONG",E,E,36,N],[13,"NPY_ULONG",E,E,36,N],[13,"NPY_LONGLONG",E,E,36,N],[13,"NPY_ULONGLONG",E,E,36,N],[13,"NPY_FLOAT",E,E,36,N],[13,"NPY_DOUBLE",E,E,36,N],[13,"NPY_LONGDOUBLE",E,E,36,N],[13,"NPY_CFLOAT",E,E,36,N],[13,"NPY_CDOUBLE",E,E,36,N],[13,"NPY_CLONGDOUBLE",E,E,36,N],[13,"NPY_OBJECT",E,E,36,N],[13,"NPY_STRING",E,E,36,N],[13,"NPY_UNICODE",E,E,36,N],[13,"NPY_VOID",E,E,36,N],[13,"NPY_DATETIME",E,E,36,N],[13,"NPY_TIMEDELTA",E,E,36,N],[13,"NPY_HALF",E,E,36,N],[13,"NPY_NTYPES",E,E,36,N],[13,"NPY_NOTYPE",E,E,36,N],[13,"NPY_CHAR",E,E,36,N],[13,"NPY_USERDEF",E,E,36,N],[4,R[112],E,E,N,N],[13,"NPY_INTROSELECT",E,E,37,N],[4,R[113],E,E,N,N],[13,"NPY_NO_CASTING",E,E,38,N],[13,"NPY_EQUIV_CASTING",E,E,38,N],[13,"NPY_SAFE_CASTING",E,E,38,N],[13,"NPY_SAME_KIND_CASTING",E,E,38,N],[13,"NPY_UNSAFE_CASTING",E,E,38,N],[4,R[114],E,E,N,N],[13,"NPY_CLIP",E,E,39,N],[13,"NPY_WRAP",E,E,39,N],[13,"NPY_RAISE",E,E,39,N],[6,R[16],E,E,N,N],[6,"npy_uintp",E,E,N,N],[6,"npy_longlong",E,E,N,N],[6,"npy_ulonglong",E,E,N,N],[6,R[17],E,E,N,N],[6,"npy_longdouble",E,E,N,N],[6,"npy_byte",E,E,N,N],[6,"npy_ubyte",E,E,N,N],[6,"npy_ushort",E,E,N,N],[6,"npy_uint",E,E,N,N],[6,"npy_ulong",E,E,N,N],[6,"npy_char",E,E,N,N],[6,"npy_short",E,E,N,N],[6,"npy_int",E,E,N,N],[6,"npy_long",E,E,N,N],[6,"npy_float",E,E,N,N],[6,"npy_double",E,E,N,N],[6,"npy_hash_t",E,E,N,N],[6,"npy_int64",E,E,N,N],[6,"npy_uint64",E,E,N,N],[6,"npy_int32",E,E,N,N],[6,R[26],E,E,N,N],[6,"npy_ucs4",E,E,N,N],[6,"npy_int16",E,E,N,N],[6,"npy_uint16",E,E,N,N],[6,"npy_int8",E,E,N,N],[6,"npy_uint8",E,E,N,N],[6,"npy_float64",E,E,N,N],[6,"npy_complex128",E,E,N,N],[6,"npy_float32",E,E,N,N],[6,"npy_complex64",E,E,N,N],[6,"npy_half",E,E,N,N],[6,"npy_float16",E,E,N,N],[6,"npy_float128",E,E,N,N],[6,"npy_complex256",E,E,N,N],[6,R[39],E,E,N,N],[6,R[24],E,E,N,N],[0,"ufunc",R[29],"Low-Level binding for UFunc API",N,N],[3,R[118],R[64],E,N,N],[3,R[115],E,E,N,N],[7,"PY_UFUNC_API",E,E,N,N],[11,"PyUFunc_FromFuncAndData",E,E,40,[[["c_int"],["self"]]]],[11,"PyUFunc_RegisterLoopForType",E,E,40,[[["c_int"],["self"],[R[40]]],["c_int"]]],[11,"PyUFunc_GenericFunction",E,E,40,[[["self"]],["c_int"]]],[11,"PyUFunc_f_f_As_d_d",E,E,40,[[["self"]]]],[11,"PyUFunc_d_d",E,E,40,[[["self"]]]],[11,"PyUFunc_f_f",E,E,40,[[["self"]]]],[11,"PyUFunc_g_g",E,E,40,[[["self"]]]],[11,"PyUFunc_F_F_As_D_D",E,E,40,[[["self"]]]],[11,"PyUFunc_F_F",E,E,40,[[["self"]]]],[11,"PyUFunc_D_D",E,E,40,[[["self"]]]],[11,"PyUFunc_G_G",E,E,40,[[["self"]]]],[11,"PyUFunc_O_O",E,E,40,[[["self"]]]],[11,"PyUFunc_ff_f_As_dd_d",E,E,40,[[["self"]]]],[11,"PyUFunc_ff_f",E,E,40,[[["self"]]]],[11,"PyUFunc_dd_d",E,E,40,[[["self"]]]],[11,"PyUFunc_gg_g",E,E,40,[[["self"]]]],[11,"PyUFunc_FF_F_As_DD_D",E,E,40,[[["self"]]]],[11,"PyUFunc_DD_D",E,E,40,[[["self"]]]],[11,"PyUFunc_FF_F",E,E,40,[[["self"]]]],[11,"PyUFunc_GG_G",E,E,40,[[["self"]]]],[11,"PyUFunc_OO_O",E,E,40,[[["self"]]]],[11,"PyUFunc_O_O_method",E,E,40,[[["self"]]]],[11,"PyUFunc_OO_O_method",E,E,40,[[["self"]]]],[11,"PyUFunc_On_Om",E,E,40,[[["self"]]]],[11,"PyUFunc_GetPyValues",E,E,40,[[["self"]],["c_int"]]],[11,"PyUFunc_checkfperr",E,E,40,[[["c_int"],["self"]],["c_int"]]],[11,"PyUFunc_clearfperr",E,E,40,[[["self"]]]],[11,"PyUFunc_getfperr",E,E,40,[[["self"]],["c_int"]]],[11,"PyUFunc_handlefperr",E,E,40,[[["c_int"],["self"]],["c_int"]]],[11,"PyUFunc_ReplaceLoopBySignature",E,E,40,[[["self"],[R[40]]],["c_int"]]],[11,"PyUFunc_FromFuncAndDataAndSignature",E,E,40,[[["c_int"],["self"]]]],[11,"PyUFunc_SetUsesArraysAsData",E,E,40,[[["self"],[R[0]]],["c_int"]]],[11,"PyUFunc_e_e",E,E,40,[[["self"]]]],[11,"PyUFunc_e_e_As_f_f",E,E,40,[[["self"]]]],[11,"PyUFunc_e_e_As_d_d",E,E,40,[[["self"]]]],[11,"PyUFunc_ee_e",E,E,40,[[["self"]]]],[11,"PyUFunc_ee_e_As_ff_f",E,E,40,[[["self"]]]],[11,"PyUFunc_ee_e_As_dd_d",E,E,40,[[["self"]]]],[11,"PyUFunc_DefaultTypeResolver",E,E,40,[[[R[25]],["self"]],["c_int"]]],[11,"PyUFunc_ValidateCasting",E,E,40,[[[R[25]],["self"]],["c_int"]]],[11,"PyUFunc_RegisterLoopForDescr",E,E,40,[[["self"],[R[40]]],["c_int"]]],[0,"types","numpy","Implements conversion utitlities.",N,N],[6,"c32",R[65],"alias of Complex32",N,N],[6,"c64",E,"alias of Complex64",N,N],[4,R[116],E,"An enum type represents numpy data type.",N,N],[13,"Bool",E,E,41,N],[13,"Int8",E,E,41,N],[13,"Int16",E,E,41,N],[13,"Int32",E,E,41,N],[13,"Int64",E,E,41,N],[13,"Uint8",E,E,41,N],[13,"Uint16",E,E,41,N],[13,"Uint32",E,E,41,N],[13,"Uint64",E,E,41,N],[13,"Float32",E,E,41,N],[13,"Float64",E,E,41,N],[13,"Complex32",E,E,41,N],[13,"Complex64",E,E,41,N],[13,"Unsupported",E,E,41,N],[8,"TypeNum",E,E,N,N],[10,R[68],E,E,42,[[["i32"]],["bool"]]],[10,R[69],E,E,42,[[],[R[41]]]],[10,R[70],E,E,42,[[],["i32"]]],[11,"into",R[42],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[51],E,E,0,[[["self"]],["string"]]],[11,R[50],E,E,0,[[[U]],[R[6]]]],[11,R[52],E,E,0,[[],[R[6]]]],[11,R[58],E,E,0,[[["self"]],[T]]],[11,R[53],E,E,0,[[["self"]],[T]]],[11,R[54],E,E,0,[[["self"]],[R[59]]]],[11,R[81],E,E,0,[[],[[R[43]],["nonnull",[R[43]]]]]],[11,R[55],E,E,0,[[[R[4]]],[U]]],[11,R[56],E,E,0,[[[R[4]],[T]],[T]]],[11,R[44],E,E,0,[[[R[4]],["self"],["f"]],["r"]]],[11,R[44],E,E,0,[[[R[4]],["self"],["f"]],["r"]]],[11,"hasattr",E,E,0,[[["self"],["n"]],[[R[6],["bool","pyerr"]],["pyerr"],["bool"]]]],[11,"getattr",E,E,0,[[["self"],["n"]],[["pyany"],["pyerr"],[R[6],["pyany","pyerr"]]]]],[11,"setattr",E,E,0,[[["v"],["self"],["n"]],[[R[6],["pyerr"]],["pyerr"]]]],[11,"delattr",E,E,0,[[["self"],["n"]],[[R[6],["pyerr"]],["pyerr"]]]],[11,"compare",E,E,0,[[["o"],["self"]],[["pyerr"],[R[45]],[R[6],[R[45],"pyerr"]]]]],[11,"rich_compare",E,E,0,[[["o"],["self"],["compareop"]],[[R[6],[R[46],"pyerr"]],["pyerr"],[R[46]]]]],[11,"repr",E,E,0,[[["self"]],[[R[47]],["pyerr"],[R[6],[R[47],"pyerr"]]]]],[11,"str",E,E,0,[[["self"]],[[R[47]],["pyerr"],[R[6],[R[47],"pyerr"]]]]],[11,"is_callable",E,E,0,[[["self"]],["bool"]]],[11,"call",E,E,0,[[[R[8],["pydict"]],["self"],["pydict"]],[["pyany"],["pyerr"],[R[6],["pyany","pyerr"]]]]],[11,"call0",E,E,0,[[["self"]],[["pyany"],["pyerr"],[R[6],["pyany","pyerr"]]]]],[11,"call1",E,E,0,[[["self"]],[["pyany"],["pyerr"],[R[6],["pyany","pyerr"]]]]],[11,"call_method",E,E,0,[[["str"],[R[8],["pydict"]],["self"],["pydict"]],[["pyany"],["pyerr"],[R[6],["pyany","pyerr"]]]]],[11,"call_method0",E,E,0,[[["str"],["self"]],[["pyany"],["pyerr"],[R[6],["pyany","pyerr"]]]]],[11,"call_method1",E,E,0,[[["str"],["self"]],[["pyany"],["pyerr"],[R[6],["pyany","pyerr"]]]]],[11,"hash",E,E,0,[[["self"]],[["isize"],["pyerr"],[R[6],["isize","pyerr"]]]]],[11,"is_true",E,E,0,[[["self"]],[[R[6],["bool","pyerr"]],["pyerr"],["bool"]]]],[11,"is_none",E,E,0,[[["self"]],["bool"]]],[11,"len",E,E,0,[[["self"]],[[R[6],[R[0],"pyerr"]],["pyerr"],[R[0]]]]],[11,"is_empty",E,E,0,[[["self"]],[[R[6],["bool","pyerr"]],["pyerr"],["bool"]]]],[11,"get_item",E,E,0,[[["self"],["k"]],[["pyany"],["pyerr"],[R[6],["pyany","pyerr"]]]]],[11,"set_item",E,E,0,[[["v"],["self"],["k"]],[[R[6],["pyerr"]],["pyerr"]]]],[11,"del_item",E,E,0,[[["self"],["k"]],[[R[6],["pyerr"]],["pyerr"]]]],[11,"iter",E,E,0,[[["self"]],[[R[48]],["pyerr"],[R[6],[R[48],"pyerr"]]]]],[11,"get_type",E,E,0,[[["self"]],["pytype"]]],[11,"get_type_ptr",E,E,0,[[["self"]]]],[11,"get_base",E,E,0,[[["self"]]]],[11,"get_mut_base",E,E,0,[[["self"]]]],[11,"cast_as",E,E,0,[[["self"]],[[R[6],[R[49]]],["d"],[R[49]]]]],[11,"extract",E,E,0,[[["self"]],[["pyerr"],[R[6],["pyerr"]]]]],[11,"get_refcnt",E,E,0,[[["self"]],["isize"]]],[11,"None",E,E,0,[[["self"]],[R[46]]]],[11,R[50],E,E,0,[[["v"]],[[T],[R[6],[R[49]]],[R[49]]]]],[11,"try_from_exact",E,E,0,[[["v"]],[[T],[R[6],[R[49]]],[R[49]]]]],[11,"try_from_mut",E,E,0,[[["v"]],[[R[6],[R[49]]],[T],[R[49]]]]],[11,"try_from_mut_exact",E,E,0,[[["v"]],[[R[6],[R[49]]],[T],[R[49]]]]],[11,"try_from_unchecked",E,E,0,[[["v"]],[T]]],[11,"try_from_mut_unchecked",E,E,0,[[["v"]],[T]]],[11,"alloc",E,E,0,[[[R[4]]]]],[11,"dealloc",E,E,0,[[[R[4]]]]],[11,"into",R[13],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[51],E,E,5,[[["self"]],["string"]]],[11,R[50],E,E,5,[[[U]],[R[6]]]],[11,R[52],E,E,5,[[],[R[6]]]],[11,R[58],E,E,5,[[["self"]],[T]]],[11,R[53],E,E,5,[[["self"]],[T]]],[11,R[54],E,E,5,[[["self"]],[R[59]]]],[11,R[55],E,E,5,[[[R[4]]],[U]]],[11,R[56],E,E,5,[[[R[4]],[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[51],E,E,6,[[["self"]],["string"]]],[11,R[50],E,E,6,[[[U]],[R[6]]]],[11,R[52],E,E,6,[[],[R[6]]]],[11,R[58],E,E,6,[[["self"]],[T]]],[11,R[53],E,E,6,[[["self"]],[T]]],[11,R[54],E,E,6,[[["self"]],[R[59]]]],[11,R[55],E,E,6,[[[R[4]]],[U]]],[11,R[56],E,E,6,[[[R[4]],[T]],[T]]],[11,"into",R[57],E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[50],E,E,43,[[[U]],[R[6]]]],[11,R[52],E,E,43,[[],[R[6]]]],[11,R[58],E,E,43,[[["self"]],[T]]],[11,R[53],E,E,43,[[["self"]],[T]]],[11,R[54],E,E,43,[[["self"]],[R[59]]]],[11,R[55],E,E,43,[[[R[4]]],[U]]],[11,R[56],E,E,43,[[[R[4]],[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[50],E,E,10,[[[U]],[R[6]]]],[11,R[52],E,E,10,[[],[R[6]]]],[11,R[58],E,E,10,[[["self"]],[T]]],[11,R[53],E,E,10,[[["self"]],[T]]],[11,R[54],E,E,10,[[["self"]],[R[59]]]],[11,R[55],E,E,10,[[[R[4]]],[U]]],[11,R[56],E,E,10,[[[R[4]],[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[50],E,E,9,[[[U]],[R[6]]]],[11,R[52],E,E,9,[[],[R[6]]]],[11,R[58],E,E,9,[[["self"]],[T]]],[11,R[53],E,E,9,[[["self"]],[T]]],[11,R[54],E,E,9,[[["self"]],[R[59]]]],[11,R[55],E,E,9,[[[R[4]]],[U]]],[11,R[56],E,E,9,[[[R[4]],[T]],[T]]],[11,"into",R[60],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[61],E,E,11,[[["self"]],[T]]],[11,R[62],E,E,11,[[["self"],[T]]]],[11,R[50],E,E,11,[[[U]],[R[6]]]],[11,R[52],E,E,11,[[],[R[6]]]],[11,R[58],E,E,11,[[["self"]],[T]]],[11,R[53],E,E,11,[[["self"]],[T]]],[11,R[54],E,E,11,[[["self"]],[R[59]]]],[11,R[55],E,E,11,[[[R[4]]],[U]]],[11,R[56],E,E,11,[[[R[4]],[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[61],E,E,12,[[["self"]],[T]]],[11,R[62],E,E,12,[[["self"],[T]]]],[11,R[50],E,E,12,[[[U]],[R[6]]]],[11,R[52],E,E,12,[[],[R[6]]]],[11,R[58],E,E,12,[[["self"]],[T]]],[11,R[53],E,E,12,[[["self"]],[T]]],[11,R[54],E,E,12,[[["self"]],[R[59]]]],[11,R[55],E,E,12,[[[R[4]]],[U]]],[11,R[56],E,E,12,[[[R[4]],[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[61],E,E,13,[[["self"]],[T]]],[11,R[62],E,E,13,[[["self"],[T]]]],[11,R[50],E,E,13,[[[U]],[R[6]]]],[11,R[52],E,E,13,[[],[R[6]]]],[11,R[58],E,E,13,[[["self"]],[T]]],[11,R[53],E,E,13,[[["self"]],[T]]],[11,R[54],E,E,13,[[["self"]],[R[59]]]],[11,R[55],E,E,13,[[[R[4]]],[U]]],[11,R[56],E,E,13,[[[R[4]],[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[61],E,E,14,[[["self"]],[T]]],[11,R[62],E,E,14,[[["self"],[T]]]],[11,R[50],E,E,14,[[[U]],[R[6]]]],[11,R[52],E,E,14,[[],[R[6]]]],[11,R[58],E,E,14,[[["self"]],[T]]],[11,R[53],E,E,14,[[["self"]],[T]]],[11,R[54],E,E,14,[[["self"]],[R[59]]]],[11,R[55],E,E,14,[[[R[4]]],[U]]],[11,R[56],E,E,14,[[[R[4]],[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[61],E,E,15,[[["self"]],[T]]],[11,R[62],E,E,15,[[["self"],[T]]]],[11,R[50],E,E,15,[[[U]],[R[6]]]],[11,R[52],E,E,15,[[],[R[6]]]],[11,R[58],E,E,15,[[["self"]],[T]]],[11,R[53],E,E,15,[[["self"]],[T]]],[11,R[54],E,E,15,[[["self"]],[R[59]]]],[11,R[55],E,E,15,[[[R[4]]],[U]]],[11,R[56],E,E,15,[[[R[4]],[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[61],E,E,16,[[["self"]],[T]]],[11,R[62],E,E,16,[[["self"],[T]]]],[11,R[50],E,E,16,[[[U]],[R[6]]]],[11,R[52],E,E,16,[[],[R[6]]]],[11,R[58],E,E,16,[[["self"]],[T]]],[11,R[53],E,E,16,[[["self"]],[T]]],[11,R[54],E,E,16,[[["self"]],[R[59]]]],[11,R[55],E,E,16,[[[R[4]]],[U]]],[11,R[56],E,E,16,[[[R[4]],[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[61],E,E,17,[[["self"]],[T]]],[11,R[62],E,E,17,[[["self"],[T]]]],[11,R[50],E,E,17,[[[U]],[R[6]]]],[11,R[52],E,E,17,[[],[R[6]]]],[11,R[58],E,E,17,[[["self"]],[T]]],[11,R[53],E,E,17,[[["self"]],[T]]],[11,R[54],E,E,17,[[["self"]],[R[59]]]],[11,R[55],E,E,17,[[[R[4]]],[U]]],[11,R[56],E,E,17,[[[R[4]],[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[61],E,E,18,[[["self"]],[T]]],[11,R[62],E,E,18,[[["self"],[T]]]],[11,R[50],E,E,18,[[[U]],[R[6]]]],[11,R[52],E,E,18,[[],[R[6]]]],[11,R[58],E,E,18,[[["self"]],[T]]],[11,R[53],E,E,18,[[["self"]],[T]]],[11,R[54],E,E,18,[[["self"]],[R[59]]]],[11,R[55],E,E,18,[[[R[4]]],[U]]],[11,R[56],E,E,18,[[[R[4]],[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[61],E,E,19,[[["self"]],[T]]],[11,R[62],E,E,19,[[["self"],[T]]]],[11,R[50],E,E,19,[[[U]],[R[6]]]],[11,R[52],E,E,19,[[],[R[6]]]],[11,R[58],E,E,19,[[["self"]],[T]]],[11,R[53],E,E,19,[[["self"]],[T]]],[11,R[54],E,E,19,[[["self"]],[R[59]]]],[11,R[55],E,E,19,[[[R[4]]],[U]]],[11,R[56],E,E,19,[[[R[4]],[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[61],E,E,44,[[["self"]],[T]]],[11,R[62],E,E,44,[[["self"],[T]]]],[11,R[50],E,E,44,[[[U]],[R[6]]]],[11,R[52],E,E,44,[[],[R[6]]]],[11,R[58],E,E,44,[[["self"]],[T]]],[11,R[53],E,E,44,[[["self"]],[T]]],[11,R[54],E,E,44,[[["self"]],[R[59]]]],[11,R[55],E,E,44,[[[R[4]]],[U]]],[11,R[56],E,E,44,[[[R[4]],[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[61],E,E,20,[[["self"]],[T]]],[11,R[62],E,E,20,[[["self"],[T]]]],[11,R[50],E,E,20,[[[U]],[R[6]]]],[11,R[52],E,E,20,[[],[R[6]]]],[11,R[58],E,E,20,[[["self"]],[T]]],[11,R[53],E,E,20,[[["self"]],[T]]],[11,R[54],E,E,20,[[["self"]],[R[59]]]],[11,R[55],E,E,20,[[[R[4]]],[U]]],[11,R[56],E,E,20,[[[R[4]],[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[61],E,E,21,[[["self"]],[T]]],[11,R[62],E,E,21,[[["self"],[T]]]],[11,R[50],E,E,21,[[[U]],[R[6]]]],[11,R[52],E,E,21,[[],[R[6]]]],[11,R[58],E,E,21,[[["self"]],[T]]],[11,R[53],E,E,21,[[["self"]],[T]]],[11,R[54],E,E,21,[[["self"]],[R[59]]]],[11,R[55],E,E,21,[[[R[4]]],[U]]],[11,R[56],E,E,21,[[[R[4]],[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[61],E,E,22,[[["self"]],[T]]],[11,R[62],E,E,22,[[["self"],[T]]]],[11,R[50],E,E,22,[[[U]],[R[6]]]],[11,R[52],E,E,22,[[],[R[6]]]],[11,R[58],E,E,22,[[["self"]],[T]]],[11,R[53],E,E,22,[[["self"]],[T]]],[11,R[54],E,E,22,[[["self"]],[R[59]]]],[11,R[55],E,E,22,[[[R[4]]],[U]]],[11,R[56],E,E,22,[[[R[4]],[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[61],E,E,23,[[["self"]],[T]]],[11,R[62],E,E,23,[[["self"],[T]]]],[11,R[50],E,E,23,[[[U]],[R[6]]]],[11,R[52],E,E,23,[[],[R[6]]]],[11,R[58],E,E,23,[[["self"]],[T]]],[11,R[53],E,E,23,[[["self"]],[T]]],[11,R[54],E,E,23,[[["self"]],[R[59]]]],[11,R[55],E,E,23,[[[R[4]]],[U]]],[11,R[56],E,E,23,[[[R[4]],[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[61],E,E,24,[[["self"]],[T]]],[11,R[62],E,E,24,[[["self"],[T]]]],[11,R[50],E,E,24,[[[U]],[R[6]]]],[11,R[52],E,E,24,[[],[R[6]]]],[11,R[58],E,E,24,[[["self"]],[T]]],[11,R[53],E,E,24,[[["self"]],[T]]],[11,R[54],E,E,24,[[["self"]],[R[59]]]],[11,R[55],E,E,24,[[[R[4]]],[U]]],[11,R[56],E,E,24,[[[R[4]],[T]],[T]]],[11,"into",R[63],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[61],E,E,25,[[["self"]],[T]]],[11,R[62],E,E,25,[[["self"],[T]]]],[11,R[50],E,E,25,[[[U]],[R[6]]]],[11,R[52],E,E,25,[[],[R[6]]]],[11,R[58],E,E,25,[[["self"]],[T]]],[11,R[53],E,E,25,[[["self"]],[T]]],[11,R[54],E,E,25,[[["self"]],[R[59]]]],[11,R[55],E,E,25,[[[R[4]]],[U]]],[11,R[56],E,E,25,[[[R[4]],[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[61],E,E,26,[[["self"]],[T]]],[11,R[62],E,E,26,[[["self"],[T]]]],[11,R[50],E,E,26,[[[U]],[R[6]]]],[11,R[52],E,E,26,[[],[R[6]]]],[11,R[58],E,E,26,[[["self"]],[T]]],[11,R[53],E,E,26,[[["self"]],[T]]],[11,R[54],E,E,26,[[["self"]],[R[59]]]],[11,R[55],E,E,26,[[[R[4]]],[U]]],[11,R[56],E,E,26,[[[R[4]],[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[61],E,E,27,[[["self"]],[T]]],[11,R[62],E,E,27,[[["self"],[T]]]],[11,R[50],E,E,27,[[[U]],[R[6]]]],[11,R[52],E,E,27,[[],[R[6]]]],[11,R[58],E,E,27,[[["self"]],[T]]],[11,R[53],E,E,27,[[["self"]],[T]]],[11,R[54],E,E,27,[[["self"]],[R[59]]]],[11,R[55],E,E,27,[[[R[4]]],[U]]],[11,R[56],E,E,27,[[[R[4]],[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[61],E,E,28,[[["self"]],[T]]],[11,R[62],E,E,28,[[["self"],[T]]]],[11,R[50],E,E,28,[[[U]],[R[6]]]],[11,R[52],E,E,28,[[],[R[6]]]],[11,R[58],E,E,28,[[["self"]],[T]]],[11,R[53],E,E,28,[[["self"]],[T]]],[11,R[54],E,E,28,[[["self"]],[R[59]]]],[11,R[55],E,E,28,[[[R[4]]],[U]]],[11,R[56],E,E,28,[[[R[4]],[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[61],E,E,29,[[["self"]],[T]]],[11,R[62],E,E,29,[[["self"],[T]]]],[11,R[50],E,E,29,[[[U]],[R[6]]]],[11,R[52],E,E,29,[[],[R[6]]]],[11,R[58],E,E,29,[[["self"]],[T]]],[11,R[53],E,E,29,[[["self"]],[T]]],[11,R[54],E,E,29,[[["self"]],[R[59]]]],[11,R[55],E,E,29,[[[R[4]]],[U]]],[11,R[56],E,E,29,[[[R[4]],[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[61],E,E,30,[[["self"]],[T]]],[11,R[62],E,E,30,[[["self"],[T]]]],[11,R[50],E,E,30,[[[U]],[R[6]]]],[11,R[52],E,E,30,[[],[R[6]]]],[11,R[58],E,E,30,[[["self"]],[T]]],[11,R[53],E,E,30,[[["self"]],[T]]],[11,R[54],E,E,30,[[["self"]],[R[59]]]],[11,R[55],E,E,30,[[[R[4]]],[U]]],[11,R[56],E,E,30,[[[R[4]],[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[61],E,E,31,[[["self"]],[T]]],[11,R[62],E,E,31,[[["self"],[T]]]],[11,R[50],E,E,31,[[[U]],[R[6]]]],[11,R[52],E,E,31,[[],[R[6]]]],[11,R[58],E,E,31,[[["self"]],[T]]],[11,R[53],E,E,31,[[["self"]],[T]]],[11,R[54],E,E,31,[[["self"]],[R[59]]]],[11,R[55],E,E,31,[[[R[4]]],[U]]],[11,R[56],E,E,31,[[[R[4]],[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[61],E,E,32,[[["self"]],[T]]],[11,R[62],E,E,32,[[["self"],[T]]]],[11,R[50],E,E,32,[[[U]],[R[6]]]],[11,R[52],E,E,32,[[],[R[6]]]],[11,R[58],E,E,32,[[["self"]],[T]]],[11,R[53],E,E,32,[[["self"]],[T]]],[11,R[54],E,E,32,[[["self"]],[R[59]]]],[11,R[55],E,E,32,[[[R[4]]],[U]]],[11,R[56],E,E,32,[[[R[4]],[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[61],E,E,33,[[["self"]],[T]]],[11,R[62],E,E,33,[[["self"],[T]]]],[11,R[50],E,E,33,[[[U]],[R[6]]]],[11,R[52],E,E,33,[[],[R[6]]]],[11,R[58],E,E,33,[[["self"]],[T]]],[11,R[53],E,E,33,[[["self"]],[T]]],[11,R[54],E,E,33,[[["self"]],[R[59]]]],[11,R[55],E,E,33,[[[R[4]]],[U]]],[11,R[56],E,E,33,[[[R[4]],[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[61],E,E,34,[[["self"]],[T]]],[11,R[62],E,E,34,[[["self"],[T]]]],[11,R[50],E,E,34,[[[U]],[R[6]]]],[11,R[52],E,E,34,[[],[R[6]]]],[11,R[58],E,E,34,[[["self"]],[T]]],[11,R[53],E,E,34,[[["self"]],[T]]],[11,R[54],E,E,34,[[["self"]],[R[59]]]],[11,R[55],E,E,34,[[[R[4]]],[U]]],[11,R[56],E,E,34,[[[R[4]],[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[61],E,E,35,[[["self"]],[T]]],[11,R[62],E,E,35,[[["self"],[T]]]],[11,R[50],E,E,35,[[[U]],[R[6]]]],[11,R[52],E,E,35,[[],[R[6]]]],[11,R[58],E,E,35,[[["self"]],[T]]],[11,R[53],E,E,35,[[["self"]],[T]]],[11,R[54],E,E,35,[[["self"]],[R[59]]]],[11,R[55],E,E,35,[[[R[4]]],[U]]],[11,R[56],E,E,35,[[[R[4]],[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[61],E,E,36,[[["self"]],[T]]],[11,R[62],E,E,36,[[["self"],[T]]]],[11,R[50],E,E,36,[[[U]],[R[6]]]],[11,R[52],E,E,36,[[],[R[6]]]],[11,R[58],E,E,36,[[["self"]],[T]]],[11,R[53],E,E,36,[[["self"]],[T]]],[11,R[54],E,E,36,[[["self"]],[R[59]]]],[11,R[55],E,E,36,[[[R[4]]],[U]]],[11,R[56],E,E,36,[[[R[4]],[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[61],E,E,37,[[["self"]],[T]]],[11,R[62],E,E,37,[[["self"],[T]]]],[11,R[50],E,E,37,[[[U]],[R[6]]]],[11,R[52],E,E,37,[[],[R[6]]]],[11,R[58],E,E,37,[[["self"]],[T]]],[11,R[53],E,E,37,[[["self"]],[T]]],[11,R[54],E,E,37,[[["self"]],[R[59]]]],[11,R[55],E,E,37,[[[R[4]]],[U]]],[11,R[56],E,E,37,[[[R[4]],[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[61],E,E,38,[[["self"]],[T]]],[11,R[62],E,E,38,[[["self"],[T]]]],[11,R[50],E,E,38,[[[U]],[R[6]]]],[11,R[52],E,E,38,[[],[R[6]]]],[11,R[58],E,E,38,[[["self"]],[T]]],[11,R[53],E,E,38,[[["self"]],[T]]],[11,R[54],E,E,38,[[["self"]],[R[59]]]],[11,R[55],E,E,38,[[[R[4]]],[U]]],[11,R[56],E,E,38,[[[R[4]],[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[61],E,E,39,[[["self"]],[T]]],[11,R[62],E,E,39,[[["self"],[T]]]],[11,R[50],E,E,39,[[[U]],[R[6]]]],[11,R[52],E,E,39,[[],[R[6]]]],[11,R[58],E,E,39,[[["self"]],[T]]],[11,R[53],E,E,39,[[["self"]],[T]]],[11,R[54],E,E,39,[[["self"]],[R[59]]]],[11,R[55],E,E,39,[[[R[4]]],[U]]],[11,R[56],E,E,39,[[[R[4]],[T]],[T]]],[11,"into",R[64],E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[50],E,E,45,[[[U]],[R[6]]]],[11,R[52],E,E,45,[[],[R[6]]]],[11,R[58],E,E,45,[[["self"]],[T]]],[11,R[53],E,E,45,[[["self"]],[T]]],[11,R[54],E,E,45,[[["self"]],[R[59]]]],[11,R[55],E,E,45,[[[R[4]]],[U]]],[11,R[56],E,E,45,[[[R[4]],[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[50],E,E,40,[[[U]],[R[6]]]],[11,R[52],E,E,40,[[],[R[6]]]],[11,R[58],E,E,40,[[["self"]],[T]]],[11,R[53],E,E,40,[[["self"]],[T]]],[11,R[54],E,E,40,[[["self"]],[R[59]]]],[11,R[55],E,E,40,[[[R[4]]],[U]]],[11,R[56],E,E,40,[[[R[4]],[T]],[T]]],[11,"into",R[65],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[61],E,E,41,[[["self"]],[T]]],[11,R[62],E,E,41,[[["self"],[T]]]],[11,R[50],E,E,41,[[[U]],[R[6]]]],[11,R[52],E,E,41,[[],[R[6]]]],[11,R[58],E,E,41,[[["self"]],[T]]],[11,R[53],E,E,41,[[["self"]],[T]]],[11,R[54],E,E,41,[[["self"]],[R[59]]]],[11,R[55],E,E,41,[[[R[4]]],[U]]],[11,R[56],E,E,41,[[[R[4]],[T]],[T]]],[11,R[66],R[13],E,6,[[],["pyerr"]]],[11,R[67],E,E,6,[[],["pyerr"]]],[11,R[68],"numpy",E,46,[[["i32"]],["bool"]]],[11,R[69],E,E,46,[[],[R[41]]]],[11,R[70],E,E,46,[[],["i32"]]],[11,R[68],E,E,47,[[["i32"]],["bool"]]],[11,R[69],E,E,47,[[],[R[41]]]],[11,R[70],E,E,47,[[],["i32"]]],[11,"as_ref",R[42],E,0,[[["self"]],["pyany"]]],[11,"clone",R[60],E,11,[[["self"]],["pyarrayobject"]]],[11,"clone",E,E,12,[[["self"]],["pyarray_descr"]]],[11,"clone",E,E,13,[[["self"]],["pyarrray_arraydescr"]]],[11,"clone",E,E,14,[[["self"]],["pyarray_arrfuncs"]]],[11,"clone",E,E,15,[[["self"]],["pyarrayflagsobject"]]],[11,"clone",E,E,16,[[["self"]],[R[71]]]],[11,"clone",E,E,17,[[["self"]],["pyarray_chunk"]]],[11,"clone",E,E,18,[[["self"]],["pyarrayinterface"]]],[11,"clone",E,E,19,[[["self"]],["pyufuncobject"]]],[11,"clone",E,E,44,[[["self"]],["npyiter"]]],[11,"clone",E,E,20,[[["self"]],["pyarrayiterobject"]]],[11,"clone",E,E,21,[[["self"]],["pyarraymultiiterobject"]]],[11,"clone",E,E,22,[[["self"]],["pyarrayneighborhooditerobject"]]],[11,"clone",E,E,23,[[["self"]],["pyarraymapiterobject"]]],[11,"clone",E,E,24,[[["self"]],["npyauxdata"]]],[11,"clone",R[63],E,25,[[["self"]],[R[72]]]],[11,"clone",E,E,26,[[["self"]],[R[73]]]],[11,"clone",E,E,27,[[["self"]],[R[74]]]],[11,"clone",E,E,31,[[["self"]],[R[18]]]],[11,"clone",E,E,32,[[["self"]],[R[19]]]],[11,"clone",E,E,33,[[["self"]],[R[21]]]],[11,"clone",E,E,34,[[["self"]],[R[75]]]],[11,"clone",E,E,35,[[["self"]],[R[23]]]],[11,"clone",E,E,36,[[["self"]],[R[79]]]],[11,"clone",E,E,37,[[["self"]],[R[28]]]],[11,"clone",E,E,38,[[["self"]],[R[25]]]],[11,"clone",E,E,39,[[["self"]],[R[20]]]],[11,"clone",E,E,28,[[["self"]],[R[76]]]],[11,"clone",E,E,29,[[["self"]],[R[77]]]],[11,"clone",E,E,30,[[["self"]],[R[78]]]],[11,"clone",R[65],E,41,[[["self"]],[R[41]]]],[11,"eq",R[42],E,0,[[[R[10]],["self"]],["bool"]]],[11,"eq",R[63],E,31,[[["self"],[R[18]]],["bool"]]],[11,"eq",E,E,32,[[[R[19]],["self"]],["bool"]]],[11,"eq",E,E,33,[[[R[21]],["self"]],["bool"]]],[11,"eq",E,E,34,[[[R[75]],["self"]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[23]]],["bool"]]],[11,"eq",E,E,36,[[[R[79]],["self"]],["bool"]]],[11,"eq",E,E,37,[[["self"],[R[28]]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[25]]],["bool"]]],[11,"eq",E,E,39,[[["self"],[R[20]]],["bool"]]],[11,"eq",R[65],E,41,[[[R[41]],["self"]],["bool"]]],[11,"fmt",R[42],E,0,[[[R[80]],["self"]],[[R[6],["error"]],["error"]]]],[11,"fmt",R[13],E,5,[[[R[80]],["self"]],[R[6]]]],[11,"fmt",E,E,6,[[[R[80]],["self"]],[R[6]]]],[11,"fmt",R[42],E,0,[[[R[80]],["self"]],[[R[6],["error"]],["error"]]]],[11,"fmt",R[13],E,5,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",E,E,6,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",R[60],E,44,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",R[63],E,25,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",E,E,26,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",E,E,27,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",E,E,31,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",E,E,32,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",E,E,33,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",E,E,34,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",E,E,35,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",E,E,36,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",E,E,37,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",E,E,38,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",E,E,28,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",E,E,29,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",E,E,30,[[["self"],[R[80]]],[R[6]]]],[11,"fmt",R[65],E,41,[[["self"],[R[80]]],[R[6]]]],[11,"deref",R[57],E,43,[[["self"]]]],[11,"deref",R[64],E,45,[[["self"]]]],[11,"hash",R[63],E,31,[[["self"],["__h"]]]],[11,"hash",E,E,32,[[["self"],["__h"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash",E,E,34,[[["self"],["__h"]]]],[11,"hash",E,E,35,[[["self"],["__h"]]]],[11,"hash",E,E,36,[[["self"],["__h"]]]],[11,"hash",E,E,37,[[["self"],["__h"]]]],[11,"hash",E,E,38,[[["self"],["__h"]]]],[11,"hash",E,E,39,[[["self"],["__h"]]]],[11,R[81],R[42],E,0,[[],[[R[43]],["nonnull",[R[43]]]]]],[11,"as_ptr",E,"Gets the underlying FFI pointer, returns a borrowed pointer.",0,[[["self"]]]],[11,"to_object",E,E,0,[[["self"],[R[4]]],[R[46]]]],[11,R[55],E,E,0,[[[R[4]]],[R[46]]]],[11,"type_object",E,E,0,[[],[R[43]]]],[11,"is_instance",E,E,0,[[["pyany"]],["bool"]]]],"p":[[3,"PyArray"],[8,R[82]],[8,R[83]],[8,R[84]],[8,R[85]],[3,R[86]],[4,R[87]],[8,R[88]],[8,R[89]],[4,R[90]],[3,R[91]],[3,R[92]],[3,R[93]],[3,R[94]],[3,R[95]],[3,R[96]],[3,R[97]],[3,R[98]],[3,R[99]],[3,R[100]],[3,R[101]],[3,R[102]],[3,R[103]],[3,R[104]],[3,R[105]],[3,R[72]],[3,R[73]],[3,R[74]],[3,R[76]],[3,R[77]],[3,R[78]],[4,R[106]],[4,R[107]],[4,R[108]],[4,R[109]],[4,R[110]],[4,R[111]],[4,R[112]],[4,R[113]],[4,R[114]],[3,R[115]],[4,R[116]],[8,"TypeNum"],[3,R[117]],[3,"NpyIter"],[3,R[118]],[6,"c32"],[6,"c64"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);